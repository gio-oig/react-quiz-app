{"version":3,"sources":["API.js","utils.js","components/CuestionCard.jsx","components/Button.jsx","App.js","index.js"],"names":["fetchQuestions","category","difficulty","type","a","API","fetch","response","json","responseData","results","map","question","answers","array","incorrect_answers","correct_answer","sort","Math","random","CuestionCard","callback","userAnswer","questionNr","totalQuestions","className","answer","key","disabled","value","onClick","Button","invert","children","style","background","color","loaderCSS","css","App","useForm","register","handleSubmit","useState","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startGame","newQuestions","id","onSubmit","data","htmlFor","name","ref","required","size","length","e","currentTarget","correct","prevScore","answerObject","correctAnswer","prev","undefined","TOTAL_QUESTIONS","nextQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec9db6b5.chunk.js","sourcesContent":["import { randomizeAnswersPossitions } from './utils';\n\nexport const fetchQuestions = async (category, difficulty, type) => {\n\tconst API = `https://opentdb.com/api.php?amount=10&category=${\n\t\tcategory === 'any' ? '' : category\n\t}&difficulty=${difficulty === 'any' ? '' : difficulty}&type=${\n\t\ttype === 'any' ? '' : type\n\t}`;\n\tconst response = await fetch(API);\n\tconst responseData = await response.json();\n\n\t// return new array of objects with answers property\n\treturn responseData.results.map((question) => ({\n\t\t...question,\n\t\tanswers: randomizeAnswersPossitions([\n\t\t\t...question.incorrect_answers,\n\t\t\tquestion.correct_answer,\n\t\t]),\n\t}));\n};\n","export const randomizeAnswersPossitions = (array) =>\n\tarray.sort(() => Math.random() - 0.5);\n","import React from 'react';\n\nimport './CuestionCard.style.css';\n\nconst CuestionCard = ({\n\tquestion,\n\tanswers,\n\tcallback,\n\tuserAnswer,\n\tquestionNr,\n\ttotalQuestions,\n}) => {\n\treturn (\n\t\t<div className=\"question-card\">\n\t\t\t<p className=\"number\">\n\t\t\t\t{questionNr} / {totalQuestions}\n\t\t\t</p>\n\t\t\t<p className=\"question-card__question\">{question}</p>\n\t\t\t<div className=\"question-card__answer-box\">\n\t\t\t\t{answers.map((answer) => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey={answer}\n\t\t\t\t\t\tdisabled={!!userAnswer}\n\t\t\t\t\t\tvalue={answer}\n\t\t\t\t\t\tonClick={callback}\n\t\t\t\t\t\tclassName=\"question-card__answer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>{answer}</span>\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CuestionCard;\n","import React from 'react';\n\nimport './Button.style.css';\nfunction Button({ invert, onClick, children }) {\n\treturn (\n\t\t<div className=\"btn-wrapper\">\n\t\t\t<button\n\t\t\t\tclassName=\"btn\"\n\t\t\t\tonClick={onClick}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: invert ? '#fff' : '#005375',\n\t\t\t\t\tcolor: invert ? '#005375' : '#fff',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { css } from '@emotion/core';\nimport { BeatLoader } from 'react-spinners';\nimport { useForm } from 'react-hook-form';\n\nimport { fetchQuestions } from './API';\n\nimport CuestionCard from './components/CuestionCard';\nimport Button from './components/Button';\n\nimport './App.css';\n\nconst loaderCSS = css`\n\tposition: absolute;\n\ttop: 30%;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n`;\n\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n\tconst { register, handleSubmit } = useForm();\n\tconst [loading, setLoading] = useState(false);\n\tconst [questions, setQuestions] = useState([]);\n\tconst [number, setNumber] = useState(0);\n\tconst [userAnswers, setUserAnswers] = useState([]);\n\tconst [score, setScore] = useState(0);\n\tconst [gameOver, setGameOver] = useState(true);\n\n\tconst startGame = async (category, difficulty, type) => {\n\t\tsetLoading(true);\n\t\tsetGameOver(false);\n\n\t\tconst newQuestions = await fetchQuestions(category, difficulty, type);\n\n\t\tsetQuestions(newQuestions);\n\t\tsetScore(0);\n\t\tsetUserAnswers([]);\n\t\tsetNumber(0);\n\t\tsetLoading(false);\n\t};\n\n\tconst checkAnswer = (e) => {\n\t\tif (!gameOver) {\n\t\t\tconst answer = e.currentTarget.value;\n\n\t\t\tconst correct = questions[number].correct_answer === answer;\n\n\t\t\tif (correct) setScore((prevScore) => prevScore + 1);\n\n\t\t\tconst answerObject = {\n\t\t\t\tquestion: questions[number].question,\n\t\t\t\tanswer,\n\t\t\t\tcorrect,\n\t\t\t\tcorrectAnswer: questions[number].correct_answer,\n\t\t\t};\n\n\t\t\tsetUserAnswers((prev) => [...prev, answerObject]);\n\t\t}\n\t};\n\n\tconst nextQuestion = () => {\n\t\tconst nextQuestion = number + 1;\n\n\t\tsetNumber(nextQuestion);\n\t};\n\n\tconst onSubmit = (data) => {\n\t\tconst { category, difficulty, type } = data;\n\t\tstartGame(category, difficulty, type);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<section id=\"main\">\n\t\t\t\t<h1 className=\"heading\">QUIZIZ</h1>\n\t\t\t\t{gameOver && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"category\">Select Category:</label>\n\t\t\t\t\t\t\t\t<select name=\"category\" ref={register({ required: true })}>\n\t\t\t\t\t\t\t\t\t<option value=\"any\">Any Category</option>\n\t\t\t\t\t\t\t\t\t<option value=\"9\">General Knowledge</option>\n\t\t\t\t\t\t\t\t\t<option value=\"10\">Entertainment: Books</option>\n\t\t\t\t\t\t\t\t\t<option value=\"11\">Entertainment: Film</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12\">Entertainment: Music</option>\n\t\t\t\t\t\t\t\t\t<option value=\"13\">\n\t\t\t\t\t\t\t\t\t\tEntertainment: Musicals &amp; Theatres\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t<option value=\"14\">Entertainment: Television</option>\n\t\t\t\t\t\t\t\t\t<option value=\"15\">Entertainment: Video Games</option>\n\t\t\t\t\t\t\t\t\t<option value=\"16\">Entertainment: Board Games</option>\n\t\t\t\t\t\t\t\t\t<option value=\"17\">Science &amp; Nature</option>\n\t\t\t\t\t\t\t\t\t<option value=\"18\">Science: Computers</option>\n\t\t\t\t\t\t\t\t\t<option value=\"19\">Science: Mathematics</option>\n\t\t\t\t\t\t\t\t\t<option value=\"20\">Mythology</option>\n\t\t\t\t\t\t\t\t\t<option value=\"21\">Sports</option>\n\t\t\t\t\t\t\t\t\t<option value=\"22\">Geography</option>\n\t\t\t\t\t\t\t\t\t<option value=\"23\">History</option>\n\t\t\t\t\t\t\t\t\t<option value=\"24\">Politics</option>\n\t\t\t\t\t\t\t\t\t<option value=\"25\">Art</option>\n\t\t\t\t\t\t\t\t\t<option value=\"26\">Celebrities</option>\n\t\t\t\t\t\t\t\t\t<option value=\"27\">Animals</option>\n\t\t\t\t\t\t\t\t\t<option value=\"28\">Vehicles</option>\n\t\t\t\t\t\t\t\t\t<option value=\"29\">Entertainment: Comics</option>\n\t\t\t\t\t\t\t\t\t<option value=\"30\">Science: Gadgets</option>\n\t\t\t\t\t\t\t\t\t<option value=\"31\">\n\t\t\t\t\t\t\t\t\t\tEntertainment: Japanese Anime &amp; Manga\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t<option value=\"32\">\n\t\t\t\t\t\t\t\t\t\tEntertainment: Cartoon &amp; Animations\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"difficulty\">Select Difficulty:</label>\n\t\t\t\t\t\t\t\t<select name=\"difficulty\" ref={register({ required: true })}>\n\t\t\t\t\t\t\t\t\t<option value=\"any\">Any Difficulty</option>\n\t\t\t\t\t\t\t\t\t<option value=\"easy\">easy</option>\n\t\t\t\t\t\t\t\t\t<option value=\"easy\">medium</option>\n\t\t\t\t\t\t\t\t\t<option value=\"easy\">hard</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"type\">Select Type:</label>\n\t\t\t\t\t\t\t\t<select name=\"type\" ref={register({ required: true })}>\n\t\t\t\t\t\t\t\t\t<option value=\"any\">Any Type</option>\n\t\t\t\t\t\t\t\t\t<option value=\"multiple\">multiple Chioce</option>\n\t\t\t\t\t\t\t\t\t<option value=\"boolean\">true / false</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Button>Start</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<BeatLoader\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tcss={loaderCSS}\n\t\t\t\t\tsize=\"30px\"\n\t\t\t\t\tcolor=\"white\"\n\t\t\t\t/>\n\t\t\t\t{!loading && !gameOver && userAnswers.length !== TOTAL_QUESTIONS ? (\n\t\t\t\t\t<CuestionCard\n\t\t\t\t\t\tquestion={questions[number].question}\n\t\t\t\t\t\tanswers={questions[number].answers}\n\t\t\t\t\t\tcallback={checkAnswer}\n\t\t\t\t\t\tuserAnswer={userAnswers ? userAnswers[number] : undefined}\n\t\t\t\t\t\tquestionNr={number + 1}\n\t\t\t\t\t\ttotalQuestions={TOTAL_QUESTIONS}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t{!loading &&\n\t\t\t\t\t!gameOver &&\n\t\t\t\t\tuserAnswers.length === number + 1 &&\n\t\t\t\t\tnumber !== TOTAL_QUESTIONS - 1 && (\n\t\t\t\t\t\t<Button invert onClick={nextQuestion}>\n\t\t\t\t\t\t\tNext Question\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\n\t\t\t\t{userAnswers.length === TOTAL_QUESTIONS && !gameOver && !loading && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p className=\"score\">correct: {score}</p>\n\t\t\t\t\t\t<p className=\"score\">incorrect: {TOTAL_QUESTIONS - score}</p>\n\t\t\t\t\t\t<Button invert onClick={() => setGameOver(true)}>\n\t\t\t\t\t\t\tRestart\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}